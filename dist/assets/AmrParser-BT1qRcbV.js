import{g as e,c as t,B as a,X as r}from"./index-pBuBQYRc.js";const i={len:1,get:(t,a)=>({frameType:e(t,a,1,4)})},s=t("music-metadata:parser:AMR"),o=[12,13,15,17,19,20,26,31,5,0,0,0,0,0,0,0];class AmrParser extends a{async parse(){if("#!AMR"!==await this.tokenizer.readToken(new r(5)))throw new Error("Invalid AMR file: invalid MAGIC number");this.metadata.setFormat("container","AMR"),this.metadata.setFormat("codec","AMR"),this.metadata.setFormat("sampleRate",8e3),this.metadata.setFormat("bitrate",64e3),this.metadata.setFormat("numberOfChannels",1);let e=0,t=0;const a=this.tokenizer.fileInfo?.size??Number.MAX_SAFE_INTEGER;if(this.options.duration){for(;this.tokenizer.position<a;){const r=await this.tokenizer.readToken(i),n=o[r.frameType];if(n>0){if(e+=n+1,e>a)break;await this.tokenizer.ignore(n),++t}else s(`Found no-data frame, frame-type: ${r.frameType}. Skipping`)}this.metadata.setFormat("duration",.02*t)}}}export{AmrParser};
