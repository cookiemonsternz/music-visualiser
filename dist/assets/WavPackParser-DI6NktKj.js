import{f as t,F as e,k as a,d as i,c as s,B as o,J as n,N as r,a as l,u as c,m as d}from"./index-pBuBQYRc.js";const m=[6e3,8e3,9600,11025,12e3,16e3,22050,24e3,32e3,44100,48e3,64e3,88200,96e3,192e3,-1],k={len:32,get:(s,o)=>{const n=t.get(s,o+24),r={BlockID:e.get(s,o),blockSize:t.get(s,o+4),version:a.get(s,o+8),totalSamples:t.get(s,o+12),blockIndex:t.get(s,o+16),blockSamples:t.get(s,o+20),flags:{bitsPerSample:8*(1+getBitAllignedNumber(n,0,2)),isMono:isBitSet(n,2),isHybrid:isBitSet(n,3),isJointStereo:isBitSet(n,4),crossChannel:isBitSet(n,5),hybridNoiseShaping:isBitSet(n,6),floatingPoint:isBitSet(n,7),samplingRate:m[getBitAllignedNumber(n,23,4)],isDSD:isBitSet(n,31)},crc:new i(4).get(s,o+28)};return r.flags.isDSD&&(r.totalSamples*=8),r}},g={len:1,get:(t,e)=>({functionId:getBitAllignedNumber(t[e],0,6),isOptional:isBitSet(t[e],5),isOddSize:isBitSet(t[e],6),largeBlock:isBitSet(t[e],7)})};function isBitSet(t,e){return 1===getBitAllignedNumber(t,e,1)}function getBitAllignedNumber(t,e,a){return t>>>e&4294967295>>>32-a}const h=s("music-metadata:parser:WavPack");class WavPackContentError extends(d("WavPack")){}class WavPackParser extends o{constructor(){super(...arguments),this.audioDataSize=0}async parse(){return this.audioDataSize=0,await this.parseWavPackBlocks(),n.tryParseApeHeader(this.metadata,this.tokenizer,this.options)}async parseWavPackBlocks(){do{if("wvpk"!==await this.tokenizer.peekToken(e))break;const t=await this.tokenizer.readToken(k);if("wvpk"!==t.BlockID)throw new WavPackContentError("Invalid WavPack Block-ID");h(`WavPack header blockIndex=${t.blockIndex}, len=${k.len}`),0!==t.blockIndex||this.metadata.format.container||(this.metadata.setFormat("container","WavPack"),this.metadata.setFormat("lossless",!t.flags.isHybrid),this.metadata.setFormat("bitsPerSample",t.flags.bitsPerSample),t.flags.isDSD||(this.metadata.setFormat("sampleRate",t.flags.samplingRate),this.metadata.setFormat("duration",t.totalSamples/t.flags.samplingRate)),this.metadata.setFormat("numberOfChannels",t.flags.isMono?1:2),this.metadata.setFormat("numberOfSamples",t.totalSamples),this.metadata.setFormat("codec",t.flags.isDSD?"DSD":"PCM"));const a=t.blockSize-(k.len-8);await(0===t.blockIndex?this.parseMetadataSubBlock(t,a):this.tokenizer.ignore(a)),t.blockSamples>0&&(this.audioDataSize+=t.blockSize)}while(!this.tokenizer.fileInfo.size||this.tokenizer.fileInfo.size-this.tokenizer.position>=k.len);this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*this.audioDataSize/this.metadata.format.duration)}async parseMetadataSubBlock(t,e){let a=e;for(;a>g.len;){const e=await this.tokenizer.readToken(g),i=await this.tokenizer.readNumber(e.largeBlock?r:l),s=new Uint8Array(2*i-(e.isOddSize?1:0));switch(await this.tokenizer.readBuffer(s),h(`Metadata Sub-Blocks functionId=0x${e.functionId.toString(16)}, id.largeBlock=${e.largeBlock},data-size=${s.length}`),e.functionId){case 0:break;case 14:{h("ID_DSD_BLOCK");const e=1<<l.get(s,0),a=t.flags.samplingRate*e*8;if(!t.flags.isDSD)throw new WavPackContentError("Only expect DSD block if DSD-flag is set");this.metadata.setFormat("sampleRate",a),this.metadata.setFormat("duration",t.totalSamples/a);break}case 36:h("ID_ALT_TRAILER: trailer for non-wav files");break;case 38:this.metadata.setFormat("audioMD5",s);break;case 47:h(`ID_BLOCK_CHECKSUM: checksum=${c(s)}`);break;default:h(`Ignore unsupported meta-sub-block-id functionId=0x${e.functionId.toString(16)}`)}a-=g.len+(e.largeBlock?r.len:l.len)+2*i,h(`remainingLength=${a}`),e.isOddSize&&this.tokenizer.ignore(1)}if(0!==a)throw new WavPackContentError("metadata-sub-block should fit it remaining length")}}export{WavPackContentError,WavPackParser};
