import{A as e,U as t,S as s,a,f as r,c as o,m as i}from"./index-pBuBQYRc.js";class VorbisPictureToken{static fromBase64(e){return VorbisPictureToken.fromBuffer(Uint8Array.from(atob(e),(e=>e.charCodeAt(0))))}static fromBuffer(e){return new VorbisPictureToken(e.length).get(e,0)}constructor(e){this.len=e}get(a,r){const o=e[t.get(a,r)];r+=4;const i=t.get(a,r);r+=4;const n=new s(i,"utf-8").get(a,r);r+=i;const c=t.get(a,r);r+=4;const h=new s(c,"utf-8").get(a,r);r+=c;const g=t.get(a,r);r+=4;const m=t.get(a,r);r+=4;const l=t.get(a,r);r+=4;const d=t.get(a,r);r+=4;const p=t.get(a,r);r+=4;return{type:o,format:n,description:h,width:g,height:m,colour_depth:l,indexed_color:d,data:Uint8Array.from(a.slice(r,r+p))}}}const n=7,CommonHeader_get=(e,t)=>({packetType:a.get(e,t),vorbis:new s(6,"ascii").get(e,t+1)}),IdentificationHeader_get=(e,t)=>({version:r.get(e,t+0),channelMode:a.get(e,t+4),sampleRate:r.get(e,t+5),bitrateMax:r.get(e,t+9),bitrateNominal:r.get(e,t+13),bitrateMin:r.get(e,t+17)});class VorbisDecoder{constructor(e,t){this.data=e,this.offset=t}readInt32(){const e=r.get(this.data,this.offset);return this.offset+=4,e}readStringUtf8(){const e=this.readInt32(),t=new TextDecoder("utf-8").decode(this.data.subarray(this.offset,this.offset+e));return this.offset+=e,t}parseUserComment(){const e=this.offset,t=this.readStringUtf8(),s=t.indexOf("=");return{key:t.slice(0,s).toUpperCase(),value:t.slice(s+1),len:this.offset-e}}}const c=o("music-metadata:parser:ogg:vorbis1");class VorbisContentError extends(i("Vorbis")){}class VorbisParser{constructor(e,t){this.metadata=e,this.options=t,this.pageSegments=[]}async parsePage(e,t){if(e.headerType.firstPage)this.parseFirstPage(e,t);else{if(e.headerType.continued){if(0===this.pageSegments.length)throw new VorbisContentError("Cannot continue on previous page");this.pageSegments.push(t)}if(e.headerType.lastPage||!e.headerType.continued){if(this.pageSegments.length>0){const e=VorbisParser.mergeUint8Arrays(this.pageSegments);await this.parseFullPage(e)}this.pageSegments=e.headerType.lastPage?[]:[t]}}e.headerType.lastPage&&this.calculateDuration(e)}static mergeUint8Arrays(e){const t=e.reduce(((e,t)=>e+t.length),0),s=new Uint8Array(t);return e.forEach(((e,t,a)=>{const r=a.slice(0,t).reduce(((e,t)=>e+t.length),0);s.set(e,r)})),s}async flush(){await this.parseFullPage(VorbisParser.mergeUint8Arrays(this.pageSegments))}async parseUserComment(e,t){const s=new VorbisDecoder(e,t).parseUserComment();return await this.addTag(s.key,s.value),s.len}async addTag(e,t){if("METADATA_BLOCK_PICTURE"===e&&"string"==typeof t){if(this.options.skipCovers)return void c("Ignore picture");t=VorbisPictureToken.fromBase64(t),c(`Push picture: id=${e}, format=${t.format}`)}else c(`Push tag: id=${e}, value=${t}`);await this.metadata.addTag("vorbis",e,t)}calculateDuration(e){this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0&&(this.metadata.setFormat("numberOfSamples",e.absoluteGranulePosition),this.metadata.setFormat("duration",e.absoluteGranulePosition/this.metadata.format.sampleRate))}parseFirstPage(e,t){this.metadata.setFormat("codec","Vorbis I"),c("Parse first page");const s=CommonHeader_get(t,0);if("vorbis"!==s.vorbis)throw new VorbisContentError("Metadata does not look like Vorbis");if(1!==s.packetType)throw new VorbisContentError("First Ogg page should be type 1: the identification header");{const e=IdentificationHeader_get(t,n);this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("bitrate",e.bitrateNominal),this.metadata.setFormat("numberOfChannels",e.channelMode),c("sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s",e.sampleRate,e.bitrateNominal,e.channelMode)}}async parseFullPage(e){const t=CommonHeader_get(e,0);if(c("Parse full page: type=%s, byteLength=%s",t.packetType,e.byteLength),3===t.packetType)return this.parseUserCommentList(e,n)}async parseUserCommentList(e,t){const s=r.get(e,t);t+=4,t+=s;let a=r.get(e,t);for(t+=4;a-- >0;)t+=await this.parseUserComment(e,t)}}export{VorbisParser as V,VorbisPictureToken as a,VorbisDecoder as b};
